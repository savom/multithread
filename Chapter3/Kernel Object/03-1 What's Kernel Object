
커널 오브젝트별로 개별적인 특성을 알아보기 보단!
	모든 커널 오브젝트의 공통적인 특성에 대해 알아보자

애플리케이션은 수많은 리소스를 관리하기 위해 커널 오브젝트를 사용한다.

커널 오브젝트란 무엇인가에 대해 알아보자

	 우리 개발자들은 항시 커널 오브젝트를 생성하고, 열고, 조작하는 등의 작업을 하는데, 운영체제는 액세스 토큰 오브젝트, 이벤트 오브젝트 등
	다양한 형태의 커널 오브젝트를 생성하고 조작한다.

	 오브젝트들은 다양한 종류의 함수들을 통해 만들어지는데, 함수의 이름에 포함된 오브젝트의 명칭이 "반드시 커널 레벨의 오브젝트 이름과 일치하는 것은 아니다!"
	몇몇 값들(보안 디스크립터, 사용 카운트 등)은 모든 오브젝트 타입에 공통적으로 존재한다.하지만 대부분의 값들은 각 오브젝트 별로 독특하다.

	 커널 오브젝트의 데이터 구조체는 "커널"에 의해서만 접근이 가능하기 때문에 애플리케이션에서 데이터 구조체가 저장되어 있는 메모리 위치를 직접 접근하여
	그 내용을 변경하는 것은 불가능하다. 이렇게 구조체에 대한 직접적인 접근을 제한함으로써 
	이미 개발되어 있는 애플리케이션에 영향을 미치지 않고도 구조체에 내용을 임의로 추가, 삭제. 변경할 수 있다.

	 마이크로소프트는 정제된 방법을 통해 구조체의 내용에 접근할 수 있도록 일련의 함수 집합을 제공하고 있어서 이를 통해 커널 오브젝트의 내부적인 값에 접근할 수 있다.
	커널 오브젝트를 생성하는 함수를 호출하면 함수는 각 커널 오브젝트를 구분하기 위한 핸들 값을 반환해 준다. 핸들 값은 프로세스 내의 모든 스레드에 의해 사용 가능한 값이지만,
	특별한 의미를 가지고 있지는 않다. 핸들은 다양한 윈도우 함수들의 매개변수로 전달될 수 있는데, 운영체제는 매개변수로 전달된 핸들 값을 통해 어떤 커널 오브젝트르 조작하고자 하는지 구분할 수 있다.

	 운영체제를 견고하게 하기 위해 이러한 핸들 값들은 프로세스 별로 독립적으로 유지된다.

>>> Next Usage count & security







